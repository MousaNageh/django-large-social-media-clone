version: '3.8'

services:

  db:
    container_name: social_clone_db
    build:
      context: .
      dockerfile: docker_images/database/Dockerfile
    env_file:
      - .env
    ports:
      - "5540:5432"
    expose:
      - 5433
    volumes:
      - ./db_backup:/var/lib/postgresql/data

  web_app:
    container_name: social_clone_app
    tty: true
    stdin_open: true
    build:
      context: .
      dockerfile: docker_images/web/Dockerfile
    volumes:
      - .:/app
    command: >
      sh -c "python /app/manage.py collectstatic --noinput &&
             python /app/manage.py pgmakemigrations &&
             python /app/manage.py makemigrations && 
             python /app/manage.py migrate &&
             python /app/manage.py user_pg_functions &&
             python /app/manage.py init_admin &&
             uvicorn social_clone.asgi:application --host 0.0.0.0 --port 6060 --workers 3 --reload"
    restart: always

    env_file:
      - .env
    depends_on:
      - db
      - cache_redis

  celery_works:
      restart: always
      build:
        context: .
        dockerfile: docker_images/web/Dockerfile
      command: celery -A social_clone worker --loglevel=info -c 4
      volumes:
        - .:/app
      env_file:
        - .env
      depends_on:
        - web_app
        - cache_redis
        - db



  cache_redis:
    image: redis:alpine3.19
    restart: always
    depends_on:
      - db

  channels_redis:
    image: redis:alpine3.19
    restart: always
    depends_on:
      - db

  nginx:
    container_name: social_clone_nginx
    build:
      context: .
      dockerfile: docker_images/nginx/Dockerfile
    ports:
      - "${DOCKER_WEB_PORT}:80"
    depends_on:
      - web_app

